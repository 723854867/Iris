<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.busap.vcs.data.mapper.OperatePlanDAO">
	<sql id="page">limit #{pageStart},#{pageSize}</sql>
	<sql id="planFiledSql"> 
		select op.id as id,
		op.creator_id as creatorId,
		op.create_at as createDate,
		op.start_time as startTime,
		op.end_time as endTime,
		op.plan_type as planType,
		op.target_num as targetNum,
		op.time_unit as timeUnit,
		(select count(id) from ruser where create_at BETWEEN op.start_time and op.end_time) as actualNum 
    </sql>

	<select id="findAllPlan" resultType="com.busap.vcs.data.entity.OperatePlan">
		<include refid="planFiledSql"/>
		from operate_plan op
		 order by op.start_time desc
		<include refid="page"/>
	</select>
	
	<select id="findAllPlanCount" resultType="Integer">
		select count(id) from operate_plan op
	</select>
	
	<select id="findPlanInTime" parameterType="com.busap.vcs.data.entity.OperatePlan" resultType="Integer">
		select count(*) from operate_plan op 
		where op.time_unit=#{timeUnit} 
		and (#{startTime} BETWEEN op.start_time and op.end_time or #{endTime} BETWEEN op.start_time and op.end_time)
		
		<if test="id!=null">
	    	 <![CDATA[and id<>#{id}]]>
	    </if>
	</select>
	
	<select id="findCurrentPlan" resultType="com.busap.vcs.data.entity.OperatePlan">
		<include refid="planFiledSql"/>
		from operate_plan op
		where op.time_unit=#{timeUnit} and NOW() BETWEEN op.start_time and op.end_time
		 order by op.start_time desc
	</select>

	<select id="selectOperatePlanList" parameterType="java.util.Map" resultType="com.busap.vcs.data.entity.OperatePlan">
		SELECT
		op.id AS id,
		op.creator_id AS creatorId,
		op.create_at AS createDate,
		op.start_time AS startTime,
		op.end_time AS endTime,
		op.plan_type AS planType,
		op.target_num AS targetNum,
		op.time_unit AS timeUnit,
		(
			SELECT
				sum(t.id)
			FROM
				(
					SELECT
						DATE(ruser.create_at) AS ca,
						count(id) AS id
					FROM
						ruser
					GROUP BY
						DATE(ruser.create_at)
				) t
			WHERE
				t.ca BETWEEN DATE(op.start_time)
			AND DATE(op.end_time)
			) AS actualNum
		FROM
		operate_plan op
		ORDER BY
		op.start_time DESC
	</select>
	<!-- (select count(id) from ruser where create_at BETWEEN op.start_time and op.end_time) as actualNum-->

</mapper>