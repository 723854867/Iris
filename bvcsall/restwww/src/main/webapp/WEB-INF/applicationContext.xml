<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="false">

    <!--
         default is /WEB-INF/config*.properties
         see com.busap.vcs.webcomn.servlet.SrpingCtxPropertiesServletListener
     -->
    <context:property-placeholder
            location="${config.properties}"
            ignore-resource-not-found="false"
            ignore-unresolvable="false"
            local-override="true"
            file-encoding="UTF-8"/>
   
   <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入-->
	<context:component-scan base-package="com.busap.vcs"> 
	</context:component-scan>
	 
   <jpa:repositories base-package="com.busap.vcs.data.repository"
		factory-class="com.busap.vcs.data.repository.BaseRepositoryFactoryBean">
	</jpa:repositories>
 

     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init" >
        <property name="driverClassName" value="${db-0-driver}" />
        <property name="url" value="${db-0-url}" />
        <property name="username" value="${db-0-user}" />
        <property name="password" value="${db-0-password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${db-0-initialSize}" />
        <property name="minIdle" value="${db-0-minIdle}" />
        <property name="maxActive" value="${db-0-maxActive}" />


        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />

    </bean>


    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml"/>
        <property name="persistenceUnitName" value="persistenceUnit"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.connection.isolation">3</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider
                </prop>
                <prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/hibernate.search/index</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>org.quartz.scheduler.skipUpdateCheck</value>
                <value>true</value>
            </list>
        </property>
    </bean>
    <bean id="messageSource" class="com.busap.vcs.webcomn.WildcardResourceBundleMessageSource">
        <property name="cacheSeconds" value="${message.cache_seconds}"/>
        <property name="defaultEncoding" value="${message.default_encoding}"/>
        <property name="fileEncodings" value="${message.default_encoding}"/>
        <!-- must set be false, otherwise beanvalidation will never replace Annotation Attributes correctly. -->
        <property name="useCodeAsDefaultMessage" value="false"/>
        <!--
        TODO extends ReloadableResourceBundleMessageSource to support * in filename of basenames property
        -->
        <property name="basenames">
            <list>
                <value>/WEB-INF/language/message</value>
                <value>/WEB-INF/language/security/message</value>
                <value>/WEB-INF/language/message-*</value>
                <value>/WEB-INF/language/validation-*</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>


    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="${locale}"/>
    </bean> 
    
     <bean class="com.busap.vcs.oauth.third.weibo.weibo4j.util.WeiboConfig">
	    <property name="pros">
		    <props>
		    	<prop key="client_ID">${client_ID}</prop>
		    	<prop key="client_SERCRET">${client_SERCRET}</prop>
		    	<prop key="redirect_URI">${redirect_URI}</prop>
		    	<prop key="baseURL">${baseURL}</prop>
		    	<prop key="accessTokenURL">${accessTokenURL}</prop>
		    	<prop key="authorizeURL">${authorizeURL}</prop>
		    	<prop key="rmURL">${rmURL}</prop>
		    </props>
	    </property>
    </bean>
    <!-- 导入其他的context -->
    <import resource="classpath*:applicationContext-service.xml" />

</beans>